{
	// Place your C++_Single 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
		"Print to cpp":{
			"prefix": "cpp",    //在新建立的页面中输入C++就会有智能提示，Tab就自动生成好了
			"body": [
				"#include <bits/stdc++.h>",
				"using namespace std;", //标准命名空间
				"",
				"int main()",   //main()函数
				"{",
				"    $0",    //最终光标会在这里等待输入
				"    system(\"pause\");",    //标准C++的等待用户动作
				"    return 0;", //结束
				"}",
				"",
			],
			"description": "A cpp file template."   //用户输入后智能提示的内容（你可以用中文写“生成C++模板”）
		},
		"Print to lc":{
			"prefix": "lc",    //在新建立的页面中输入C++就会有智能提示，Tab就自动生成好了
			"body": [
				"#include <bits/stdc++.h>",
				"using namespace std;", //标准命名空间
				"",
				"$0",  //最终光标会在这里等待输入
			],
			"description": "A cpp file template."   //用户输入后智能提示的内容（你可以用中文写“生成C++模板”）
		}

}