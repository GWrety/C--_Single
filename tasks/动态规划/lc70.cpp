#include<bits/stdc++.h>
//22.2.24
/*
假设你正在爬楼梯。需要 n 阶你才能到达楼顶。
每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？
*/
/*
    一开始思没转变过来，总之就是没有真正理解状态转移方程，没有入动态规划的门
    其实就是一个斐波那契数列 T(n)=T(n-1)+T(n-2)
    !!!!没抓住只看它最后一步的想法。
    就从最后一步看，要么两步，要么1步， 一下就理解动态转移方程了。
    从其他方向向就会被拉扯向其他地方，有很大问题
    就是最后一步要么走2阶，要么走1阶，才能理解这个状态转移方程。
*/
//和斐波那契解法一样，动态规划   或者 矩阵快速幂
class Solution {
public:
    int climbStairs(int n) {
        if(n==1)return 1;
        if(n==2) return 2;
        int p=0,q=1,r=2;
        for(int i=3;i<=n;i++){
            p=q;
            q=r;
            r=p+q;
        }
        return r;
    }
};